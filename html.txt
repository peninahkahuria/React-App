<!DOCTYPE html>
<html>
    <head>
        <title>Test</title>
        <script src="https://unpkg.com/react@16/umd/react.development.js" crossorigin></script>
        <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin>
        </script>
        <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script> 
    </head>
    <body>
        
        <div id="container"></div>
        
        <script type="text/babel">
        ReactDOM.render(
          <h1>Hello, React!</h1>,
          document.getElementById('container')
        )
        </script>
        
        class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
  
  addProduct(productId,name,price,quantity){
    let product ={
    productId:productId,
    name:name,
    price:price,
    quantity:quantity
    }
  this.products.push(product);
  }
  
  
  getProducts(productId){
   for(var i=0;i<this.products.length;i++){
     let farm = this.products[i];
      if (product.productId===productId);
      {
        return product;
      }
    } 
 }
  
   removeProduct(productId){
    let product = this.getProduct(productId);
    let index = this.products.indexOf(product);
    this.products.splice(index,1);
  }
  
  updateProduct(productId,name,price,quantity){
    let product ={productId:productId,
    name:name,
    price:price,
    quantity:quantity
    }
    this.products.push(product);
  }
  getProductCatalog(){
    for(var i=0;i<this.carts.length;i++){
      let product=this.product[1];
      let productsCatalog={
        product:productname,
        quantity:productquantity,
//       this.productCatalog.push(productsCatalog)
      
      }
      return(this.productCatalog)
    } 
    
  }
   
  addToCart(cartId,product,orderQuantity,customerId){
    let item ={
    cartId:cartId,
    product:product,
    orderQuantity:orderQuantity,
    customerId:customerId
    }
  this.carts.push(item);
  }
  getFromCart(productId){
   for(var i=0;i<this.carts.length;i++){
     let item = this.carts[i];
      if (item.productId===productId);
      {
        return item;
      }
    } 
 }
  
   removeFromCart(productId){
    let product= this.getProduct(productId);
    let index = this.carts.indexOf(product);
    this.carts.splice(index,1);
  }
  createOrder(orderId,cartId){
    let order= (orderId,
        cardId)
    this.orders.push(order)
    
  }
  cancelOrder(orderId){}
  calculateOrderCost(){}
  getOrder(orderId){
     for(var i=0;i<this.customers.length;i++){
     let orders= this.orders[i];
    if (orders.ordersId===ordersId);
      
        return orders;
      }
  }
  
   addCustomer(customerId,name,email,address){
    let customer ={
    customerId:customerId,
    name:name,
    email:email,
    address:address
    }
 this.customers.push(customer);
}
   
  getCustomer(customerId){
   for(var i=0;i<this.customers.length;i++){
     let customer = this.customers[i];
      if (customer.customerId===customerId);
      {
        return customer;
      }
    } 
 }
  removeCustomer(customerId){
    let customer = this.getCustomer(customerId);
    let index = this.customers.indexOf(customer);
    this.customers.splice(index,1);
  }
  updateCustomer(customerId,name,email,address){
    let customer2 ={
    customerId:customerId,
    name:name,
    email:email,
    address:address
} 
this.customers.push(customer2) 
} 
} 
var onion = new MumMboga();
onion.updateProduct(12,"onion","53",6);
onion.updateProduct(13,"pepper","78",3);
console.log(onion.products);


var tomatoes = new MumMboga();
tomatoes.addToCart(14,"Tomatoes",13,25);
console.log(tomatoes.carts);

var customer = new MumMboga();
customer.addCustomer(254,"peninah","peninah@gmail.com",132);
console.log(customer.customers);

var customer= new MumMboga();
customer.addCustomer(165,"grace","grace@gmail.com",132);
console.log(customer.customers);
    </body>
</html>